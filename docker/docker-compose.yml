---
version: '2'
services:
  cp-zookeeper:
    image: confluentinc/cp-zookeeper:6.1.1
    hostname: cp-zookeeper
    container_name: cp-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  cp-broker:
    image: confluentinc/cp-kafka:6.1.1
    hostname: cp-broker
    container_name: cp-broker
    depends_on:
      - cp-zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'cp-zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://cp-broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  cp-schema-registry:
    image: confluentinc/cp-schema-registry:6.1.1
    hostname: cp-schema-registry
    container_name: cp-schema-registry
    depends_on:
      - cp-broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: cp-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'cp-broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
#
#  cp-connect:
#    image: cnfldemos/kafka-connect-datagen:0.4.0-6.1.0
#    hostname: cp-connect
#    container_name: cp-connect
#    depends_on:
#      - cp-broker
#      - cp-schema-registry
#    ports:
#      - "8083:8083"
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: 'cp-broker:29092'
#      CONNECT_REST_ADVERTISED_HOST_NAME: cp-connect
#      CONNECT_REST_PORT: 8083
#      CONNECT_GROUP_ID: compose-connect-group
#      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
#      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
#      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
#      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
#      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
#      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
#      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://cp-schema-registry:8081
#      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
#      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
#
#  cp-ksqldb-server:
#    image: confluentinc/cp-ksqldb-server:6.1.1
#    hostname: cp-ksqldb-server
#    container_name: cp-ksqldb-server
#    depends_on:
#      - cp-broker
#      - cp-connect
#    ports:
#      - "8088:8088"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      KSQL_BOOTSTRAP_SERVERS: "cp-broker:29092"
#      KSQL_HOST_NAME: cp-ksqldb-server
#      KSQL_LISTENERS: "http://0.0.0.0:8088"
#      KSQL_CACHE_MAX_BYTES_BUFFERING: 0
#      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://cp-schema-registry:8081"
#      KSQL_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
#      KSQL_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
#      KSQL_KSQL_CONNECT_URL: "http://cp-connect:8083"
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_REPLICATION_FACTOR: 1
#      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: 'true'
#      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: 'true'
#
#  cp-ksqldb-cli:
#    image: confluentinc/cp-ksqldb-cli:6.1.1
#    container_name: cp-ksqldb-cli
#    depends_on:
#      - cp-broker
#      - cp-connect
#      - cp-ksqldb-server
#    entrypoint: /bin/sh
#    tty: true
#
#  cp-ksql-datagen:
#    image: confluentinc/ksqldb-examples:6.1.1
#    hostname: cp-ksql-datagen
#    container_name: cp-ksql-datagen
#    depends_on:
#      - cp-ksqldb-server
#      - cp-broker
#      - cp-schema-registry
#      - cp-connect
#    command: "bash -c 'echo Waiting for Kafka to be ready... && \
#                       cub kafka-ready -b cp-broker:29092 1 40 && \
#                       echo Waiting for Confluent Schema Registry to be ready... && \
#                       cub sr-ready cp-schema-registry 8081 40 && \
#                       echo Waiting a few seconds for topic creation to finish... && \
#                       sleep 11 && \
#                       tail -f /dev/null'"
#    environment:
#      KSQL_CONFIG_DIR: "/etc/ksql"
#      STREAMS_BOOTSTRAP_SERVERS: cp-broker:29092
#      STREAMS_SCHEMA_REGISTRY_HOST: cp-schema-registry
#      STREAMS_SCHEMA_REGISTRY_PORT: 8081
#
  cp-rest-proxy:
    image: confluentinc/cp-kafka-rest:6.1.1
    depends_on:
      - cp-broker
      - cp-schema-registry
    ports:
      - 8082:8082
    hostname: cp-rest-proxy
    container_name: cp-rest-proxy
    environment:
      KAFKA_REST_HOST_NAME: cp-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: 'cp-broker:29092'
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://cp-schema-registry:8081'

  kafka-connect :
    hostname: kafka-connect
    container_name: kafka-connect
#    image: confluentinc/cp-kafka-connect:6.1.1
    ports:
      - 8083:8083
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'cp-broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://cp-schema-registry:8081
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
      CLASSPATH: "/usr/share/confluent-hub-components/confluentinc-kafka-connect-jdbc/lib/ojdbc6.jar,/usr/share/confluent-hub-components/confluentinc-kafka-connect-jdbc/lib/mysql.jar"
    build:
      context: .
      dockerfile: Dockerfile

  mysql :
    hostname: mysql-employees
    container_name: mysql-employees
    image: genschsa/mysql-employees
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: college
    volumes:
      - $PWD/data:/var/lib/mysql